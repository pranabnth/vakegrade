//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("VaKEGradeModel", "FK_BranchSubjectAssignment_Branch", "Branch", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(HTL.Grieskirchen.VaKEGrade.Database.Branch), "BranchSubjectAssignment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(HTL.Grieskirchen.VaKEGrade.Database.BranchSubjectAssignment), true)]
[assembly: EdmRelationshipAttribute("VaKEGradeModel", "FK_BranchSubjectAssignment_Subject", "Subject", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(HTL.Grieskirchen.VaKEGrade.Database.Subject), "BranchSubjectAssignment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(HTL.Grieskirchen.VaKEGrade.Database.BranchSubjectAssignment), true)]
[assembly: EdmRelationshipAttribute("VaKEGradeModel", "FK_Grade_Pupil", "Pupil", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(HTL.Grieskirchen.VaKEGrade.Database.Pupil), "Grade", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(HTL.Grieskirchen.VaKEGrade.Database.Grade), true)]
[assembly: EdmRelationshipAttribute("VaKEGradeModel", "FK_Grade_SubjectArea", "SubjectArea", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(HTL.Grieskirchen.VaKEGrade.Database.SubjectArea), "Grade", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(HTL.Grieskirchen.VaKEGrade.Database.Grade), true)]
[assembly: EdmRelationshipAttribute("VaKEGradeModel", "FK_SPF_Pupil", "Pupil", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(HTL.Grieskirchen.VaKEGrade.Database.Pupil), "SPF", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(HTL.Grieskirchen.VaKEGrade.Database.SPF), true)]
[assembly: EdmRelationshipAttribute("VaKEGradeModel", "FK_VoluntarySubjectAssignement_Pupil", "Pupil", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(HTL.Grieskirchen.VaKEGrade.Database.Pupil), "VoluntarySubjectAssignement", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(HTL.Grieskirchen.VaKEGrade.Database.VoluntarySubjectAssignement), true)]
[assembly: EdmRelationshipAttribute("VaKEGradeModel", "FK_SPF_Subject", "Subject", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(HTL.Grieskirchen.VaKEGrade.Database.Subject), "SPF", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(HTL.Grieskirchen.VaKEGrade.Database.SPF), true)]
[assembly: EdmRelationshipAttribute("VaKEGradeModel", "FK_TeacherSubjectAssignment_Subject", "Subject", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(HTL.Grieskirchen.VaKEGrade.Database.Subject), "TeacherSubjectAssignment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(HTL.Grieskirchen.VaKEGrade.Database.TeacherSubjectAssignment), true)]
[assembly: EdmRelationshipAttribute("VaKEGradeModel", "FK_VoluntarySubjectAssignement_Subject", "Subject", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(HTL.Grieskirchen.VaKEGrade.Database.Subject), "VoluntarySubjectAssignement", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(HTL.Grieskirchen.VaKEGrade.Database.VoluntarySubjectAssignement), true)]
[assembly: EdmRelationshipAttribute("VaKEGradeModel", "FK_TeacherSubjectAssignment_Teacher", "Teacher", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(HTL.Grieskirchen.VaKEGrade.Database.Teacher), "TeacherSubjectAssignment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(HTL.Grieskirchen.VaKEGrade.Database.TeacherSubjectAssignment), true)]
[assembly: EdmRelationshipAttribute("VaKEGradeModel", "FK_SchoolClass_Branch", "Branch", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(HTL.Grieskirchen.VaKEGrade.Database.Branch), "SchoolClass", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(HTL.Grieskirchen.VaKEGrade.Database.SchoolClass), true)]
[assembly: EdmRelationshipAttribute("VaKEGradeModel", "FK_Pupil_SchoolClass", "SchoolClass", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(HTL.Grieskirchen.VaKEGrade.Database.SchoolClass), "Pupil", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(HTL.Grieskirchen.VaKEGrade.Database.Pupil), true)]
[assembly: EdmRelationshipAttribute("VaKEGradeModel", "FK_SchoolClass_PrimaryClassTeacher", "Teacher", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(HTL.Grieskirchen.VaKEGrade.Database.Teacher), "SchoolClass", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(HTL.Grieskirchen.VaKEGrade.Database.SchoolClass), true)]
[assembly: EdmRelationshipAttribute("VaKEGradeModel", "FK_SchoolClass_SecondaryClassTeacher", "Teacher", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(HTL.Grieskirchen.VaKEGrade.Database.Teacher), "SchoolClass", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(HTL.Grieskirchen.VaKEGrade.Database.SchoolClass), true)]
[assembly: EdmRelationshipAttribute("VaKEGradeModel", "FK_TeacherSubjectAssignment_SchoolClass", "SchoolClass", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(HTL.Grieskirchen.VaKEGrade.Database.SchoolClass), "TeacherSubjectAssignment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(HTL.Grieskirchen.VaKEGrade.Database.TeacherSubjectAssignment), true)]
[assembly: EdmRelationshipAttribute("VaKEGradeModel", "FK_SubjectArea_Subject", "Subject", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(HTL.Grieskirchen.VaKEGrade.Database.Subject), "SubjectArea", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(HTL.Grieskirchen.VaKEGrade.Database.SubjectArea), true)]

#endregion

namespace HTL.Grieskirchen.VaKEGrade.Database
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class VaKEGradeEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new VaKEGradeEntities object using the connection string found in the 'VaKEGradeEntities' section of the application configuration file.
        /// </summary>
        public VaKEGradeEntities() : base("name=VaKEGradeEntities", "VaKEGradeEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new VaKEGradeEntities object.
        /// </summary>
        public VaKEGradeEntities(string connectionString) : base(connectionString, "VaKEGradeEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new VaKEGradeEntities object.
        /// </summary>
        public VaKEGradeEntities(EntityConnection connection) : base(connection, "VaKEGradeEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Branch> Branches
        {
            get
            {
                if ((_Branches == null))
                {
                    _Branches = base.CreateObjectSet<Branch>("Branches");
                }
                return _Branches;
            }
        }
        private ObjectSet<Branch> _Branches;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<BranchSubjectAssignment> BranchSubjectAssignments
        {
            get
            {
                if ((_BranchSubjectAssignments == null))
                {
                    _BranchSubjectAssignments = base.CreateObjectSet<BranchSubjectAssignment>("BranchSubjectAssignments");
                }
                return _BranchSubjectAssignments;
            }
        }
        private ObjectSet<BranchSubjectAssignment> _BranchSubjectAssignments;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Grade> Grades
        {
            get
            {
                if ((_Grades == null))
                {
                    _Grades = base.CreateObjectSet<Grade>("Grades");
                }
                return _Grades;
            }
        }
        private ObjectSet<Grade> _Grades;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Pupil> Pupils
        {
            get
            {
                if ((_Pupils == null))
                {
                    _Pupils = base.CreateObjectSet<Pupil>("Pupils");
                }
                return _Pupils;
            }
        }
        private ObjectSet<Pupil> _Pupils;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SPF> SPFs
        {
            get
            {
                if ((_SPFs == null))
                {
                    _SPFs = base.CreateObjectSet<SPF>("SPFs");
                }
                return _SPFs;
            }
        }
        private ObjectSet<SPF> _SPFs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Subject> Subjects
        {
            get
            {
                if ((_Subjects == null))
                {
                    _Subjects = base.CreateObjectSet<Subject>("Subjects");
                }
                return _Subjects;
            }
        }
        private ObjectSet<Subject> _Subjects;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SubjectArea> SubjectAreas
        {
            get
            {
                if ((_SubjectAreas == null))
                {
                    _SubjectAreas = base.CreateObjectSet<SubjectArea>("SubjectAreas");
                }
                return _SubjectAreas;
            }
        }
        private ObjectSet<SubjectArea> _SubjectAreas;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Teacher> Teachers
        {
            get
            {
                if ((_Teachers == null))
                {
                    _Teachers = base.CreateObjectSet<Teacher>("Teachers");
                }
                return _Teachers;
            }
        }
        private ObjectSet<Teacher> _Teachers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TeacherSubjectAssignment> TeacherSubjectAssignments
        {
            get
            {
                if ((_TeacherSubjectAssignments == null))
                {
                    _TeacherSubjectAssignments = base.CreateObjectSet<TeacherSubjectAssignment>("TeacherSubjectAssignments");
                }
                return _TeacherSubjectAssignments;
            }
        }
        private ObjectSet<TeacherSubjectAssignment> _TeacherSubjectAssignments;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<VoluntarySubjectAssignement> VoluntarySubjectAssignements
        {
            get
            {
                if ((_VoluntarySubjectAssignements == null))
                {
                    _VoluntarySubjectAssignements = base.CreateObjectSet<VoluntarySubjectAssignement>("VoluntarySubjectAssignements");
                }
                return _VoluntarySubjectAssignements;
            }
        }
        private ObjectSet<VoluntarySubjectAssignement> _VoluntarySubjectAssignements;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SchoolClass> SchoolClasses
        {
            get
            {
                if ((_SchoolClasses == null))
                {
                    _SchoolClasses = base.CreateObjectSet<SchoolClass>("SchoolClasses");
                }
                return _SchoolClasses;
            }
        }
        private ObjectSet<SchoolClass> _SchoolClasses;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Branches EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBranches(Branch branch)
        {
            base.AddObject("Branches", branch);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the BranchSubjectAssignments EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBranchSubjectAssignments(BranchSubjectAssignment branchSubjectAssignment)
        {
            base.AddObject("BranchSubjectAssignments", branchSubjectAssignment);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Grades EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGrades(Grade grade)
        {
            base.AddObject("Grades", grade);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Pupils EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPupils(Pupil pupil)
        {
            base.AddObject("Pupils", pupil);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SPFs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSPFs(SPF sPF)
        {
            base.AddObject("SPFs", sPF);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Subjects EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSubjects(Subject subject)
        {
            base.AddObject("Subjects", subject);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SubjectAreas EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSubjectAreas(SubjectArea subjectArea)
        {
            base.AddObject("SubjectAreas", subjectArea);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Teachers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTeachers(Teacher teacher)
        {
            base.AddObject("Teachers", teacher);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TeacherSubjectAssignments EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTeacherSubjectAssignments(TeacherSubjectAssignment teacherSubjectAssignment)
        {
            base.AddObject("TeacherSubjectAssignments", teacherSubjectAssignment);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the VoluntarySubjectAssignements EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToVoluntarySubjectAssignements(VoluntarySubjectAssignement voluntarySubjectAssignement)
        {
            base.AddObject("VoluntarySubjectAssignements", voluntarySubjectAssignement);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SchoolClasses EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSchoolClasses(SchoolClass schoolClass)
        {
            base.AddObject("SchoolClasses", schoolClass);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="VaKEGradeModel", Name="Branch")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Branch : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Branch object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Branch CreateBranch(global::System.Int32 id, global::System.String name)
        {
            Branch branch = new Branch();
            branch.ID = id;
            branch.Name = name;
            return branch;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VaKEGradeModel", "FK_BranchSubjectAssignment_Branch", "BranchSubjectAssignment")]
        public EntityCollection<BranchSubjectAssignment> BranchSubjectAssignments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BranchSubjectAssignment>("VaKEGradeModel.FK_BranchSubjectAssignment_Branch", "BranchSubjectAssignment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BranchSubjectAssignment>("VaKEGradeModel.FK_BranchSubjectAssignment_Branch", "BranchSubjectAssignment", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VaKEGradeModel", "FK_SchoolClass_Branch", "SchoolClass")]
        public EntityCollection<SchoolClass> SchoolClasses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SchoolClass>("VaKEGradeModel.FK_SchoolClass_Branch", "SchoolClass");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SchoolClass>("VaKEGradeModel.FK_SchoolClass_Branch", "SchoolClass", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="VaKEGradeModel", Name="BranchSubjectAssignment")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BranchSubjectAssignment : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BranchSubjectAssignment object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="branchID">Initial value of the BranchID property.</param>
        /// <param name="subjectID">Initial value of the SubjectID property.</param>
        public static BranchSubjectAssignment CreateBranchSubjectAssignment(global::System.Int32 id, global::System.Int32 branchID, global::System.Int32 subjectID)
        {
            BranchSubjectAssignment branchSubjectAssignment = new BranchSubjectAssignment();
            branchSubjectAssignment.ID = id;
            branchSubjectAssignment.BranchID = branchID;
            branchSubjectAssignment.SubjectID = subjectID;
            return branchSubjectAssignment;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BranchID
        {
            get
            {
                return _BranchID;
            }
            set
            {
                OnBranchIDChanging(value);
                ReportPropertyChanging("BranchID");
                _BranchID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BranchID");
                OnBranchIDChanged();
            }
        }
        private global::System.Int32 _BranchID;
        partial void OnBranchIDChanging(global::System.Int32 value);
        partial void OnBranchIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SubjectID
        {
            get
            {
                return _SubjectID;
            }
            set
            {
                OnSubjectIDChanging(value);
                ReportPropertyChanging("SubjectID");
                _SubjectID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SubjectID");
                OnSubjectIDChanged();
            }
        }
        private global::System.Int32 _SubjectID;
        partial void OnSubjectIDChanging(global::System.Int32 value);
        partial void OnSubjectIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VaKEGradeModel", "FK_BranchSubjectAssignment_Branch", "Branch")]
        public Branch Branch
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Branch>("VaKEGradeModel.FK_BranchSubjectAssignment_Branch", "Branch").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Branch>("VaKEGradeModel.FK_BranchSubjectAssignment_Branch", "Branch").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Branch> BranchReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Branch>("VaKEGradeModel.FK_BranchSubjectAssignment_Branch", "Branch");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Branch>("VaKEGradeModel.FK_BranchSubjectAssignment_Branch", "Branch", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VaKEGradeModel", "FK_BranchSubjectAssignment_Subject", "Subject")]
        public Subject Subject
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Subject>("VaKEGradeModel.FK_BranchSubjectAssignment_Subject", "Subject").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Subject>("VaKEGradeModel.FK_BranchSubjectAssignment_Subject", "Subject").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Subject> SubjectReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Subject>("VaKEGradeModel.FK_BranchSubjectAssignment_Subject", "Subject");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Subject>("VaKEGradeModel.FK_BranchSubjectAssignment_Subject", "Subject", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="VaKEGradeModel", Name="Grade")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Grade : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Grade object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="pupilID">Initial value of the PupilID property.</param>
        /// <param name="subjectAreaID">Initial value of the SubjectAreaID property.</param>
        /// <param name="value">Initial value of the Value property.</param>
        public static Grade CreateGrade(global::System.Int32 id, global::System.Int32 pupilID, global::System.Int32 subjectAreaID, global::System.Int32 value)
        {
            Grade grade = new Grade();
            grade.ID = id;
            grade.PupilID = pupilID;
            grade.SubjectAreaID = subjectAreaID;
            grade.Value = value;
            return grade;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PupilID
        {
            get
            {
                return _PupilID;
            }
            set
            {
                OnPupilIDChanging(value);
                ReportPropertyChanging("PupilID");
                _PupilID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PupilID");
                OnPupilIDChanged();
            }
        }
        private global::System.Int32 _PupilID;
        partial void OnPupilIDChanging(global::System.Int32 value);
        partial void OnPupilIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SubjectAreaID
        {
            get
            {
                return _SubjectAreaID;
            }
            set
            {
                OnSubjectAreaIDChanging(value);
                ReportPropertyChanging("SubjectAreaID");
                _SubjectAreaID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SubjectAreaID");
                OnSubjectAreaIDChanged();
            }
        }
        private global::System.Int32 _SubjectAreaID;
        partial void OnSubjectAreaIDChanging(global::System.Int32 value);
        partial void OnSubjectAreaIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private global::System.Int32 _Value;
        partial void OnValueChanging(global::System.Int32 value);
        partial void OnValueChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VaKEGradeModel", "FK_Grade_Pupil", "Pupil")]
        public Pupil Pupil
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Pupil>("VaKEGradeModel.FK_Grade_Pupil", "Pupil").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Pupil>("VaKEGradeModel.FK_Grade_Pupil", "Pupil").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Pupil> PupilReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Pupil>("VaKEGradeModel.FK_Grade_Pupil", "Pupil");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Pupil>("VaKEGradeModel.FK_Grade_Pupil", "Pupil", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VaKEGradeModel", "FK_Grade_SubjectArea", "SubjectArea")]
        public SubjectArea SubjectArea
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SubjectArea>("VaKEGradeModel.FK_Grade_SubjectArea", "SubjectArea").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SubjectArea>("VaKEGradeModel.FK_Grade_SubjectArea", "SubjectArea").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SubjectArea> SubjectAreaReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SubjectArea>("VaKEGradeModel.FK_Grade_SubjectArea", "SubjectArea");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SubjectArea>("VaKEGradeModel.FK_Grade_SubjectArea", "SubjectArea", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="VaKEGradeModel", Name="Pupil")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Pupil : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Pupil object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="firstName">Initial value of the FirstName property.</param>
        /// <param name="lastName">Initial value of the LastName property.</param>
        /// <param name="religion">Initial value of the Religion property.</param>
        /// <param name="gender">Initial value of the Gender property.</param>
        /// <param name="classID">Initial value of the ClassID property.</param>
        /// <param name="birthdate">Initial value of the Birthdate property.</param>
        public static Pupil CreatePupil(global::System.Int32 id, global::System.String firstName, global::System.String lastName, global::System.String religion, global::System.String gender, global::System.Int32 classID, global::System.DateTime birthdate)
        {
            Pupil pupil = new Pupil();
            pupil.ID = id;
            pupil.FirstName = firstName;
            pupil.LastName = lastName;
            pupil.Religion = religion;
            pupil.Gender = gender;
            pupil.ClassID = classID;
            pupil.Birthdate = birthdate;
            return pupil;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Religion
        {
            get
            {
                return _Religion;
            }
            set
            {
                OnReligionChanging(value);
                ReportPropertyChanging("Religion");
                _Religion = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Religion");
                OnReligionChanged();
            }
        }
        private global::System.String _Religion;
        partial void OnReligionChanging(global::System.String value);
        partial void OnReligionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Gender
        {
            get
            {
                return _Gender;
            }
            set
            {
                OnGenderChanging(value);
                ReportPropertyChanging("Gender");
                _Gender = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Gender");
                OnGenderChanged();
            }
        }
        private global::System.String _Gender;
        partial void OnGenderChanging(global::System.String value);
        partial void OnGenderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ClassID
        {
            get
            {
                return _ClassID;
            }
            set
            {
                OnClassIDChanging(value);
                ReportPropertyChanging("ClassID");
                _ClassID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ClassID");
                OnClassIDChanged();
            }
        }
        private global::System.Int32 _ClassID;
        partial void OnClassIDChanging(global::System.Int32 value);
        partial void OnClassIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Birthdate
        {
            get
            {
                return _Birthdate;
            }
            set
            {
                OnBirthdateChanging(value);
                ReportPropertyChanging("Birthdate");
                _Birthdate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Birthdate");
                OnBirthdateChanged();
            }
        }
        private global::System.DateTime _Birthdate;
        partial void OnBirthdateChanging(global::System.DateTime value);
        partial void OnBirthdateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VaKEGradeModel", "FK_Grade_Pupil", "Grade")]
        public EntityCollection<Grade> Grades
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Grade>("VaKEGradeModel.FK_Grade_Pupil", "Grade");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Grade>("VaKEGradeModel.FK_Grade_Pupil", "Grade", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VaKEGradeModel", "FK_SPF_Pupil", "SPF")]
        public EntityCollection<SPF> SPFs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SPF>("VaKEGradeModel.FK_SPF_Pupil", "SPF");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SPF>("VaKEGradeModel.FK_SPF_Pupil", "SPF", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VaKEGradeModel", "FK_VoluntarySubjectAssignement_Pupil", "VoluntarySubjectAssignement")]
        public EntityCollection<VoluntarySubjectAssignement> VoluntarySubjectAssignements
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<VoluntarySubjectAssignement>("VaKEGradeModel.FK_VoluntarySubjectAssignement_Pupil", "VoluntarySubjectAssignement");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<VoluntarySubjectAssignement>("VaKEGradeModel.FK_VoluntarySubjectAssignement_Pupil", "VoluntarySubjectAssignement", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VaKEGradeModel", "FK_Pupil_SchoolClass", "SchoolClass")]
        public SchoolClass SchoolClass
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SchoolClass>("VaKEGradeModel.FK_Pupil_SchoolClass", "SchoolClass").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SchoolClass>("VaKEGradeModel.FK_Pupil_SchoolClass", "SchoolClass").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SchoolClass> SchoolClassReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SchoolClass>("VaKEGradeModel.FK_Pupil_SchoolClass", "SchoolClass");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SchoolClass>("VaKEGradeModel.FK_Pupil_SchoolClass", "SchoolClass", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="VaKEGradeModel", Name="SchoolClass")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SchoolClass : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SchoolClass object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="level">Initial value of the Level property.</param>
        /// <param name="primaryClassTeacherID">Initial value of the PrimaryClassTeacherID property.</param>
        public static SchoolClass CreateSchoolClass(global::System.Int32 id, global::System.String name, global::System.Int32 level, global::System.Int32 primaryClassTeacherID)
        {
            SchoolClass schoolClass = new SchoolClass();
            schoolClass.ID = id;
            schoolClass.Name = name;
            schoolClass.Level = level;
            schoolClass.PrimaryClassTeacherID = primaryClassTeacherID;
            return schoolClass;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> BranchID
        {
            get
            {
                return _BranchID;
            }
            set
            {
                OnBranchIDChanging(value);
                ReportPropertyChanging("BranchID");
                _BranchID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BranchID");
                OnBranchIDChanged();
            }
        }
        private Nullable<global::System.Int32> _BranchID;
        partial void OnBranchIDChanging(Nullable<global::System.Int32> value);
        partial void OnBranchIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Level
        {
            get
            {
                return _Level;
            }
            set
            {
                OnLevelChanging(value);
                ReportPropertyChanging("Level");
                _Level = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Level");
                OnLevelChanged();
            }
        }
        private global::System.Int32 _Level;
        partial void OnLevelChanging(global::System.Int32 value);
        partial void OnLevelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PrimaryClassTeacherID
        {
            get
            {
                return _PrimaryClassTeacherID;
            }
            set
            {
                OnPrimaryClassTeacherIDChanging(value);
                ReportPropertyChanging("PrimaryClassTeacherID");
                _PrimaryClassTeacherID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PrimaryClassTeacherID");
                OnPrimaryClassTeacherIDChanged();
            }
        }
        private global::System.Int32 _PrimaryClassTeacherID;
        partial void OnPrimaryClassTeacherIDChanging(global::System.Int32 value);
        partial void OnPrimaryClassTeacherIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SecondaryClassTeacherID
        {
            get
            {
                return _SecondaryClassTeacherID;
            }
            set
            {
                OnSecondaryClassTeacherIDChanging(value);
                ReportPropertyChanging("SecondaryClassTeacherID");
                _SecondaryClassTeacherID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SecondaryClassTeacherID");
                OnSecondaryClassTeacherIDChanged();
            }
        }
        private Nullable<global::System.Int32> _SecondaryClassTeacherID;
        partial void OnSecondaryClassTeacherIDChanging(Nullable<global::System.Int32> value);
        partial void OnSecondaryClassTeacherIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VaKEGradeModel", "FK_SchoolClass_Branch", "Branch")]
        public Branch Branch
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Branch>("VaKEGradeModel.FK_SchoolClass_Branch", "Branch").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Branch>("VaKEGradeModel.FK_SchoolClass_Branch", "Branch").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Branch> BranchReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Branch>("VaKEGradeModel.FK_SchoolClass_Branch", "Branch");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Branch>("VaKEGradeModel.FK_SchoolClass_Branch", "Branch", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VaKEGradeModel", "FK_Pupil_SchoolClass", "Pupil")]
        public EntityCollection<Pupil> Pupils
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Pupil>("VaKEGradeModel.FK_Pupil_SchoolClass", "Pupil");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Pupil>("VaKEGradeModel.FK_Pupil_SchoolClass", "Pupil", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VaKEGradeModel", "FK_SchoolClass_PrimaryClassTeacher", "Teacher")]
        public Teacher Teacher
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Teacher>("VaKEGradeModel.FK_SchoolClass_PrimaryClassTeacher", "Teacher").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Teacher>("VaKEGradeModel.FK_SchoolClass_PrimaryClassTeacher", "Teacher").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Teacher> TeacherReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Teacher>("VaKEGradeModel.FK_SchoolClass_PrimaryClassTeacher", "Teacher");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Teacher>("VaKEGradeModel.FK_SchoolClass_PrimaryClassTeacher", "Teacher", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VaKEGradeModel", "FK_SchoolClass_SecondaryClassTeacher", "Teacher")]
        public Teacher Teacher1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Teacher>("VaKEGradeModel.FK_SchoolClass_SecondaryClassTeacher", "Teacher").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Teacher>("VaKEGradeModel.FK_SchoolClass_SecondaryClassTeacher", "Teacher").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Teacher> Teacher1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Teacher>("VaKEGradeModel.FK_SchoolClass_SecondaryClassTeacher", "Teacher");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Teacher>("VaKEGradeModel.FK_SchoolClass_SecondaryClassTeacher", "Teacher", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VaKEGradeModel", "FK_TeacherSubjectAssignment_SchoolClass", "TeacherSubjectAssignment")]
        public EntityCollection<TeacherSubjectAssignment> TeacherSubjectAssignments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TeacherSubjectAssignment>("VaKEGradeModel.FK_TeacherSubjectAssignment_SchoolClass", "TeacherSubjectAssignment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TeacherSubjectAssignment>("VaKEGradeModel.FK_TeacherSubjectAssignment_SchoolClass", "TeacherSubjectAssignment", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="VaKEGradeModel", Name="SPF")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SPF : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SPF object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="pupilID">Initial value of the PupilID property.</param>
        /// <param name="subjectID">Initial value of the SubjectID property.</param>
        /// <param name="level">Initial value of the Level property.</param>
        public static SPF CreateSPF(global::System.Int32 id, global::System.Int32 pupilID, global::System.Int32 subjectID, global::System.Int32 level)
        {
            SPF sPF = new SPF();
            sPF.ID = id;
            sPF.PupilID = pupilID;
            sPF.SubjectID = subjectID;
            sPF.Level = level;
            return sPF;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PupilID
        {
            get
            {
                return _PupilID;
            }
            set
            {
                OnPupilIDChanging(value);
                ReportPropertyChanging("PupilID");
                _PupilID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PupilID");
                OnPupilIDChanged();
            }
        }
        private global::System.Int32 _PupilID;
        partial void OnPupilIDChanging(global::System.Int32 value);
        partial void OnPupilIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SubjectID
        {
            get
            {
                return _SubjectID;
            }
            set
            {
                OnSubjectIDChanging(value);
                ReportPropertyChanging("SubjectID");
                _SubjectID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SubjectID");
                OnSubjectIDChanged();
            }
        }
        private global::System.Int32 _SubjectID;
        partial void OnSubjectIDChanging(global::System.Int32 value);
        partial void OnSubjectIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Level
        {
            get
            {
                return _Level;
            }
            set
            {
                OnLevelChanging(value);
                ReportPropertyChanging("Level");
                _Level = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Level");
                OnLevelChanged();
            }
        }
        private global::System.Int32 _Level;
        partial void OnLevelChanging(global::System.Int32 value);
        partial void OnLevelChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VaKEGradeModel", "FK_SPF_Pupil", "Pupil")]
        public Pupil Pupil
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Pupil>("VaKEGradeModel.FK_SPF_Pupil", "Pupil").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Pupil>("VaKEGradeModel.FK_SPF_Pupil", "Pupil").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Pupil> PupilReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Pupil>("VaKEGradeModel.FK_SPF_Pupil", "Pupil");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Pupil>("VaKEGradeModel.FK_SPF_Pupil", "Pupil", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VaKEGradeModel", "FK_SPF_Subject", "Subject")]
        public Subject Subject
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Subject>("VaKEGradeModel.FK_SPF_Subject", "Subject").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Subject>("VaKEGradeModel.FK_SPF_Subject", "Subject").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Subject> SubjectReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Subject>("VaKEGradeModel.FK_SPF_Subject", "Subject");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Subject>("VaKEGradeModel.FK_SPF_Subject", "Subject", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="VaKEGradeModel", Name="Subject")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Subject : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Subject object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="isVoluntary">Initial value of the IsVoluntary property.</param>
        public static Subject CreateSubject(global::System.Int32 id, global::System.String name, global::System.Boolean isVoluntary)
        {
            Subject subject = new Subject();
            subject.ID = id;
            subject.Name = name;
            subject.IsVoluntary = isVoluntary;
            return subject;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsVoluntary
        {
            get
            {
                return _IsVoluntary;
            }
            set
            {
                OnIsVoluntaryChanging(value);
                ReportPropertyChanging("IsVoluntary");
                _IsVoluntary = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsVoluntary");
                OnIsVoluntaryChanged();
            }
        }
        private global::System.Boolean _IsVoluntary;
        partial void OnIsVoluntaryChanging(global::System.Boolean value);
        partial void OnIsVoluntaryChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VaKEGradeModel", "FK_BranchSubjectAssignment_Subject", "BranchSubjectAssignment")]
        public EntityCollection<BranchSubjectAssignment> BranchSubjectAssignments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BranchSubjectAssignment>("VaKEGradeModel.FK_BranchSubjectAssignment_Subject", "BranchSubjectAssignment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BranchSubjectAssignment>("VaKEGradeModel.FK_BranchSubjectAssignment_Subject", "BranchSubjectAssignment", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VaKEGradeModel", "FK_SPF_Subject", "SPF")]
        public EntityCollection<SPF> SPFs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SPF>("VaKEGradeModel.FK_SPF_Subject", "SPF");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SPF>("VaKEGradeModel.FK_SPF_Subject", "SPF", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VaKEGradeModel", "FK_TeacherSubjectAssignment_Subject", "TeacherSubjectAssignment")]
        public EntityCollection<TeacherSubjectAssignment> TeacherSubjectAssignments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TeacherSubjectAssignment>("VaKEGradeModel.FK_TeacherSubjectAssignment_Subject", "TeacherSubjectAssignment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TeacherSubjectAssignment>("VaKEGradeModel.FK_TeacherSubjectAssignment_Subject", "TeacherSubjectAssignment", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VaKEGradeModel", "FK_VoluntarySubjectAssignement_Subject", "VoluntarySubjectAssignement")]
        public EntityCollection<VoluntarySubjectAssignement> VoluntarySubjectAssignements
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<VoluntarySubjectAssignement>("VaKEGradeModel.FK_VoluntarySubjectAssignement_Subject", "VoluntarySubjectAssignement");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<VoluntarySubjectAssignement>("VaKEGradeModel.FK_VoluntarySubjectAssignement_Subject", "VoluntarySubjectAssignement", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VaKEGradeModel", "FK_SubjectArea_Subject", "SubjectArea")]
        public EntityCollection<SubjectArea> SubjectAreas
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SubjectArea>("VaKEGradeModel.FK_SubjectArea_Subject", "SubjectArea");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SubjectArea>("VaKEGradeModel.FK_SubjectArea_Subject", "SubjectArea", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="VaKEGradeModel", Name="SubjectArea")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SubjectArea : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SubjectArea object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="subjectID">Initial value of the SubjectID property.</param>
        public static SubjectArea CreateSubjectArea(global::System.Int32 id, global::System.String name, global::System.Int32 subjectID)
        {
            SubjectArea subjectArea = new SubjectArea();
            subjectArea.ID = id;
            subjectArea.Name = name;
            subjectArea.SubjectID = subjectID;
            return subjectArea;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SubjectID
        {
            get
            {
                return _SubjectID;
            }
            set
            {
                OnSubjectIDChanging(value);
                ReportPropertyChanging("SubjectID");
                _SubjectID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SubjectID");
                OnSubjectIDChanged();
            }
        }
        private global::System.Int32 _SubjectID;
        partial void OnSubjectIDChanging(global::System.Int32 value);
        partial void OnSubjectIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VaKEGradeModel", "FK_Grade_SubjectArea", "Grade")]
        public EntityCollection<Grade> Grades
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Grade>("VaKEGradeModel.FK_Grade_SubjectArea", "Grade");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Grade>("VaKEGradeModel.FK_Grade_SubjectArea", "Grade", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VaKEGradeModel", "FK_SubjectArea_Subject", "Subject")]
        public Subject Subject
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Subject>("VaKEGradeModel.FK_SubjectArea_Subject", "Subject").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Subject>("VaKEGradeModel.FK_SubjectArea_Subject", "Subject").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Subject> SubjectReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Subject>("VaKEGradeModel.FK_SubjectArea_Subject", "Subject");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Subject>("VaKEGradeModel.FK_SubjectArea_Subject", "Subject", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="VaKEGradeModel", Name="Teacher")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Teacher : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Teacher object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="firstName">Initial value of the FirstName property.</param>
        /// <param name="lastName">Initial value of the LastName property.</param>
        /// <param name="userName">Initial value of the UserName property.</param>
        /// <param name="password">Initial value of the Password property.</param>
        public static Teacher CreateTeacher(global::System.Int32 id, global::System.String firstName, global::System.String lastName, global::System.String userName, global::System.String password)
        {
            Teacher teacher = new Teacher();
            teacher.ID = id;
            teacher.FirstName = firstName;
            teacher.LastName = lastName;
            teacher.UserName = userName;
            teacher.Password = password;
            return teacher;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VaKEGradeModel", "FK_TeacherSubjectAssignment_Teacher", "TeacherSubjectAssignment")]
        public EntityCollection<TeacherSubjectAssignment> TeacherSubjectAssignments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TeacherSubjectAssignment>("VaKEGradeModel.FK_TeacherSubjectAssignment_Teacher", "TeacherSubjectAssignment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TeacherSubjectAssignment>("VaKEGradeModel.FK_TeacherSubjectAssignment_Teacher", "TeacherSubjectAssignment", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VaKEGradeModel", "FK_SchoolClass_PrimaryClassTeacher", "SchoolClass")]
        public EntityCollection<SchoolClass> PrimaryClasses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SchoolClass>("VaKEGradeModel.FK_SchoolClass_PrimaryClassTeacher", "SchoolClass");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SchoolClass>("VaKEGradeModel.FK_SchoolClass_PrimaryClassTeacher", "SchoolClass", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VaKEGradeModel", "FK_SchoolClass_SecondaryClassTeacher", "SchoolClass")]
        public EntityCollection<SchoolClass> SecondaryClasses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SchoolClass>("VaKEGradeModel.FK_SchoolClass_SecondaryClassTeacher", "SchoolClass");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SchoolClass>("VaKEGradeModel.FK_SchoolClass_SecondaryClassTeacher", "SchoolClass", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="VaKEGradeModel", Name="TeacherSubjectAssignment")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TeacherSubjectAssignment : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TeacherSubjectAssignment object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="teacherID">Initial value of the TeacherID property.</param>
        /// <param name="subjectID">Initial value of the SubjectID property.</param>
        /// <param name="classID">Initial value of the ClassID property.</param>
        public static TeacherSubjectAssignment CreateTeacherSubjectAssignment(global::System.Int32 id, global::System.Int32 teacherID, global::System.Int32 subjectID, global::System.Int32 classID)
        {
            TeacherSubjectAssignment teacherSubjectAssignment = new TeacherSubjectAssignment();
            teacherSubjectAssignment.ID = id;
            teacherSubjectAssignment.TeacherID = teacherID;
            teacherSubjectAssignment.SubjectID = subjectID;
            teacherSubjectAssignment.ClassID = classID;
            return teacherSubjectAssignment;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TeacherID
        {
            get
            {
                return _TeacherID;
            }
            set
            {
                OnTeacherIDChanging(value);
                ReportPropertyChanging("TeacherID");
                _TeacherID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TeacherID");
                OnTeacherIDChanged();
            }
        }
        private global::System.Int32 _TeacherID;
        partial void OnTeacherIDChanging(global::System.Int32 value);
        partial void OnTeacherIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SubjectID
        {
            get
            {
                return _SubjectID;
            }
            set
            {
                OnSubjectIDChanging(value);
                ReportPropertyChanging("SubjectID");
                _SubjectID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SubjectID");
                OnSubjectIDChanged();
            }
        }
        private global::System.Int32 _SubjectID;
        partial void OnSubjectIDChanging(global::System.Int32 value);
        partial void OnSubjectIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ClassID
        {
            get
            {
                return _ClassID;
            }
            set
            {
                OnClassIDChanging(value);
                ReportPropertyChanging("ClassID");
                _ClassID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ClassID");
                OnClassIDChanged();
            }
        }
        private global::System.Int32 _ClassID;
        partial void OnClassIDChanging(global::System.Int32 value);
        partial void OnClassIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VaKEGradeModel", "FK_TeacherSubjectAssignment_Subject", "Subject")]
        public Subject Subject
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Subject>("VaKEGradeModel.FK_TeacherSubjectAssignment_Subject", "Subject").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Subject>("VaKEGradeModel.FK_TeacherSubjectAssignment_Subject", "Subject").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Subject> SubjectReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Subject>("VaKEGradeModel.FK_TeacherSubjectAssignment_Subject", "Subject");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Subject>("VaKEGradeModel.FK_TeacherSubjectAssignment_Subject", "Subject", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VaKEGradeModel", "FK_TeacherSubjectAssignment_Teacher", "Teacher")]
        public Teacher Teacher
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Teacher>("VaKEGradeModel.FK_TeacherSubjectAssignment_Teacher", "Teacher").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Teacher>("VaKEGradeModel.FK_TeacherSubjectAssignment_Teacher", "Teacher").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Teacher> TeacherReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Teacher>("VaKEGradeModel.FK_TeacherSubjectAssignment_Teacher", "Teacher");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Teacher>("VaKEGradeModel.FK_TeacherSubjectAssignment_Teacher", "Teacher", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VaKEGradeModel", "FK_TeacherSubjectAssignment_SchoolClass", "SchoolClass")]
        public SchoolClass SchoolClass
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SchoolClass>("VaKEGradeModel.FK_TeacherSubjectAssignment_SchoolClass", "SchoolClass").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SchoolClass>("VaKEGradeModel.FK_TeacherSubjectAssignment_SchoolClass", "SchoolClass").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SchoolClass> SchoolClassReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SchoolClass>("VaKEGradeModel.FK_TeacherSubjectAssignment_SchoolClass", "SchoolClass");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SchoolClass>("VaKEGradeModel.FK_TeacherSubjectAssignment_SchoolClass", "SchoolClass", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="VaKEGradeModel", Name="VoluntarySubjectAssignement")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class VoluntarySubjectAssignement : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new VoluntarySubjectAssignement object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="pupilID">Initial value of the PupilID property.</param>
        /// <param name="subjectID">Initial value of the SubjectID property.</param>
        public static VoluntarySubjectAssignement CreateVoluntarySubjectAssignement(global::System.Int32 id, global::System.Int32 pupilID, global::System.Int32 subjectID)
        {
            VoluntarySubjectAssignement voluntarySubjectAssignement = new VoluntarySubjectAssignement();
            voluntarySubjectAssignement.ID = id;
            voluntarySubjectAssignement.PupilID = pupilID;
            voluntarySubjectAssignement.SubjectID = subjectID;
            return voluntarySubjectAssignement;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PupilID
        {
            get
            {
                return _PupilID;
            }
            set
            {
                OnPupilIDChanging(value);
                ReportPropertyChanging("PupilID");
                _PupilID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PupilID");
                OnPupilIDChanged();
            }
        }
        private global::System.Int32 _PupilID;
        partial void OnPupilIDChanging(global::System.Int32 value);
        partial void OnPupilIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SubjectID
        {
            get
            {
                return _SubjectID;
            }
            set
            {
                OnSubjectIDChanging(value);
                ReportPropertyChanging("SubjectID");
                _SubjectID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SubjectID");
                OnSubjectIDChanged();
            }
        }
        private global::System.Int32 _SubjectID;
        partial void OnSubjectIDChanging(global::System.Int32 value);
        partial void OnSubjectIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VaKEGradeModel", "FK_VoluntarySubjectAssignement_Pupil", "Pupil")]
        public Pupil Pupil
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Pupil>("VaKEGradeModel.FK_VoluntarySubjectAssignement_Pupil", "Pupil").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Pupil>("VaKEGradeModel.FK_VoluntarySubjectAssignement_Pupil", "Pupil").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Pupil> PupilReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Pupil>("VaKEGradeModel.FK_VoluntarySubjectAssignement_Pupil", "Pupil");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Pupil>("VaKEGradeModel.FK_VoluntarySubjectAssignement_Pupil", "Pupil", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VaKEGradeModel", "FK_VoluntarySubjectAssignement_Subject", "Subject")]
        public Subject Subject
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Subject>("VaKEGradeModel.FK_VoluntarySubjectAssignement_Subject", "Subject").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Subject>("VaKEGradeModel.FK_VoluntarySubjectAssignement_Subject", "Subject").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Subject> SubjectReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Subject>("VaKEGradeModel.FK_VoluntarySubjectAssignement_Subject", "Subject");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Subject>("VaKEGradeModel.FK_VoluntarySubjectAssignement_Subject", "Subject", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
